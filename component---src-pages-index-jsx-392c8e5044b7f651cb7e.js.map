{"version":3,"file":"component---src-pages-index-jsx-392c8e5044b7f651cb7e.js","mappings":"wLAMMA,EACJ,wEAEIC,EAAkB,SAAAC,GAatB,MAAO,CACLC,mBAFED,EAXJ,GAcEE,gBAHEF,EAXJ,GAeEG,WAJEH,EAXJ,GAgBEI,UALEJ,EAXJ,GAiBEK,UANEL,EAXJ,GAkBEM,aAPEN,EAXJ,GAmBEO,OAREP,EAXJ,GAoBEQ,OATER,EAXJ,GAqBES,OAVET,EAXJ,GAsBEU,QAXEV,EAXJ,KA0BWW,EAAO,WAClB,MAAoCC,EAAAA,SAAe,IAA5CC,EAAP,KAAmBC,EAAnB,KAEAF,EAAAA,WAAgB,WACdG,MAAMjB,GACHkB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAhB,GAAI,OAAIA,EAAKmB,SAAWnB,EAAKA,KAAKoB,QAAQ,MAC/CJ,KAAKjB,GACLiB,KAAKF,KACP,IAEH,IAAMO,EAAeT,EAAAA,SAAc,WAEjC,QAA0BU,IAAtBT,EAAWL,OACb,OAAO,KAIT,GAA0B,IAAtBK,EAAWL,OACb,OAAO,sBAAIe,UAAU,aAAd,sBAIT,IAAMC,EAAWX,EAAWV,WAAa,EACnCsB,EAAkBZ,EAAWX,gBAAjB,MAAsCW,EAAWZ,mBAAjD,UAClB,OACE,gCACE,sBAAIsB,UAAU,aAAaE,GAC1BD,GACC,sBAAID,UAAU,aAAd,KAA6BV,EAAWV,WAAxC,gBAIL,CAACU,IAEJ,OACE,uBAAKU,UCvEY,+BDwEf,gBAACG,EAAA,EAAD,KACE,wBAAMC,IAAI,WAAWC,KAAM9B,EAAmB+B,GAAG,WAEnD,uCACA,0BAAKhB,EAAWR,WACfgB,I,UErEP,EALc,kBACZ,gBAACS,EAAA,EAAD,KACE,gBAACnB,EAAD","sources":["webpack://ishtakar/./src/components/Hero/index.jsx","webpack://ishtakar/./src/components/Hero/hero.module.css","webpack://ishtakar/./src/pages/index.jsx"],"sourcesContent":["import { Link } from \"gatsby\"\nimport { Helmet } from \"react-helmet\"\nimport React from \"react\"\n\nimport * as styles from \"./hero.module.css\"\n\nconst worldDataEndpoint =\n  \"https://nwdb.info/server-status/servers_24h.json?worldId=a54d4cf101b4\"\n\nconst parseServerData = data => {\n  const [\n    connectionCountMax,\n    connectionCount,\n    queueCount,\n    queueTime,\n    worldName,\n    worldSetName,\n    region,\n    status,\n    active,\n    worldId,\n  ] = data\n  return {\n    connectionCountMax,\n    connectionCount,\n    queueCount,\n    queueTime,\n    worldName,\n    worldSetName,\n    region,\n    status,\n    active,\n    worldId,\n  }\n}\n\nexport const Hero = () => {\n  const [serverData, setServerData] = React.useState({})\n\n  React.useEffect(() => {\n    fetch(worldDataEndpoint)\n      .then(res => res.json())\n      .then(data => data.success && data.data.servers[0])\n      .then(parseServerData)\n      .then(setServerData)\n  }, [])\n\n  const serverStatus = React.useMemo(() => {\n    // Unable to get data from server\n    if (serverData.status === undefined) {\n      return null\n    }\n\n    // Server is down\n    if (serverData.status === 4) {\n      return <h4 className=\"subheader\">Server Maintenance</h4>\n    }\n\n    // Check if we have a queue and contruct the queue message\n    const hasQueue = serverData.queueCount > 0\n    const onlineStatus = `${serverData.connectionCount} / ${serverData.connectionCountMax} Online`\n    return (\n      <>\n        <h4 className=\"subheader\">{onlineStatus}</h4>\n        {hasQueue && (\n          <h5 className=\"subheader\">~ {serverData.queueCount} in queue</h5>\n        )}\n      </>\n    )\n  }, [serverData])\n\n  return (\n    <div className={styles.content}>\n      <Helmet>\n        <link rel=\"prefetch\" href={worldDataEndpoint} as=\"fetch\" />\n      </Helmet>\n      <h3>New World</h3>\n      <h1>{serverData.worldName}</h1>\n      {serverStatus}\n      {/*<Link className={styles.discord} to=\"/discord\">\n        Join Discord\n      </Link>*/}\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport var content = \"hero-module--content--2VuI9\";\nexport var discord = \"hero-module--discord--25Jgb\";","import React from \"react\"\nimport { Hero } from \"../components/Hero\"\nimport Layout from \"../components/Layout\"\n\nconst Index = () => (\n  <Layout>\n    <Hero />\n  </Layout>\n)\nexport default Index\n"],"names":["worldDataEndpoint","parseServerData","data","connectionCountMax","connectionCount","queueCount","queueTime","worldName","worldSetName","region","status","active","worldId","Hero","React","serverData","setServerData","fetch","then","res","json","success","servers","serverStatus","undefined","className","hasQueue","onlineStatus","Helmet","rel","href","as","Layout"],"sourceRoot":""}